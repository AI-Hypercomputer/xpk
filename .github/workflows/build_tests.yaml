# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License

name: Build Tests

on:
  workflow_dispatch:
    inputs:
      tpu-type:
        description: 'TPU Type'
        required: true
        default: 'v4-8'
        type: choice
        options:
          - v4-8
  push:
    branches: ["main"]
  pull_request: # By default this runs for types assigned, opened and synchronize.

jobs:
  set-variables:
    runs-on: [ubuntu-22.04]
    outputs:
      cluster-name: ${{ steps.set-cluster-name.outputs.cluster-name }}
      group-name: ${{ steps.set-group-name.outputs.group-name }}
      zone: ${{ steps.set-zone.outputs.zone }}
      tpu-type: ${{ steps.set-tpu-type.outputs.tpu-type }}
    steps:
    - name: set cluster-name
      id: set-cluster-name
      run: |    
        echo cluster-name=build-xpk-2-nodepools-${{github.event.number}} >> $GITHUB_OUTPUT
    - name: set group-name
      id: set-group-name
      run: |    
        echo group-name=xpk-pr-${{github.event.number}} >> $GITHUB_OUTPUT
    - name: set zone
      id: set-zone
      run: |    
        echo zone=us-central2-a >> $GITHUB_OUTPUT
    - name: set tpu-type
      id: set-tpu-type
      run: |    
        echo tpu-type=v4-8 >> $GITHUB_OUTPUT
  # linter:
  #   uses: ./.github/workflows/lint_and_format.yml
  #   needs: [set-variables]
  #   with:
  #     group-name: ${{needs.set-variables.outputs.group-name}}
  # run-unit-tests:
  #   uses: ./.github/workflows/unit_tests.yaml
  #   needs: [linter, set-variables]
  #   with:
  #     group-name: ${{needs.set-variables.outputs.group-name}}
  # run-integration-tests:
  #   uses: ./.github/workflows/integration_tests.yaml
  #   with:
  #     group-name: ${{needs.set-variables.outputs.group-name}}
  #   secrets: inherit
  #   needs: [run-unit-tests, set-variables]
  cluster-create:
    needs: [ set-variables]
    uses: ./.github/workflows/cluster_create.yaml
    with:
      cluster-name: '${{needs.set-variables.outputs.cluster-name}}'
      tpu-type: '${{needs.set-variables.outputs.tpu-type || inputs.tpu-type}}'
      group-name: '${{needs.set-variables.outputs.group-name}}'
      zone: '${{needs.set-variables.outputs.zone}}'
    secrets: inherit
  workloads-tests:
    needs: [cluster-create, set-variables]
    uses: ./.github/workflows/workload_test.yaml
    with:
      group-name: ${{needs.set-variables.outputs.group-name}}
      cluster-name: ${{needs.set-variables.outputs.cluster-name}}
      tpu-type: ${{inputs.tpu-type || inputs.tpu-type}}
      zone: ${{needs.set-variables.outputs.zone}}
    secrets: inherit
  batch-tests:
    needs: [cluster-create, set-variables]
    uses: ./.github/workflows/batch_test.yaml
    with:
      cluster-name: ${{needs.set-variables.outputs.cluster-name}}
      group-name: ${{needs.set-variables.outputs.group-name}}
      zone: ${{needs.set-variables.outputs.zone}}
    secrets: inherit
  cluster-delete:
    if: always()
    needs: [workloads-tests, batch-tests, set-variables]
    uses: ./.github/workflows/cluster_delete.yaml
    with:
      cluster-name: ${{needs.set-variables.outputs.cluster-name}}
      zone: ${{needs.set-variables.outputs.zone}}
    secrets: inherit




