# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License

name: gpu-dws-flex

on:
  push:
    branches: ["develop"]
  workflow_dispatch:
  schedule: # Schedule the job run at 12AM PST daily.
    - cron: '0 8 * * *'


env:
  CLUSTER_NETWORK_ARGUMENTS: "--network=${{secrets.NETWORK_NAME}} --subnetwork=${{secrets.SUBNETWORK_NAME}}"

jobs:
  cluster-create-and-delete:
    runs-on: [ubuntu-22.04]
    concurrency: # We support one build test to run at a time currently.
      group: nightly-test-cluster-group
      cancel-in-progress: false
    env:
      CLUSTER_NAME: xpk-gh-flex
      DEVICE_TYPE: h100-mega-80gb-8
      NUM_NODES: 2
      COMPUTE_ZONE: asia-southeast1-b
      WORKLOAD_NAME: xpk-gh-flex-${{ github.run_attempt }}
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install expect package
      run: sudo apt-get install expect
    - uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'
    - uses: google-github-actions/setup-gcloud@v2
      with:
        version: '>= 363.0.0'
        install_components: 'beta,gke-gcloud-auth-plugin'
    - name: Verify gcp setup
      run: gcloud info
    - name: Set Google Cloud CLI properties to a unused zone to verify --zone arg is passed properly in commands.
      run: |
        gcloud config set compute/zone us-east4-a
        gcloud config get compute/zone
    - name: Install xpk dependencies
      run: |
        make install 
        echo $PWD/bin >> "$GITHUB_PATH"
    - name: Check xpk installation
      run: xpk --help
    - name: Create an XPK Cluster with zero node pools
      run: |
       python3 xpk.py cluster create --cluster $CLUSTER_NAME --device-type $DEVICE_TYPE --zone=$COMPUTE_ZONE  \
        --num-nodes=$NUM_NODES --spot --custom-cluster-arguments='${{ secrets.CLUSTER_ARGUMENTS }}'
    - name: Authenticate Docker
      run: gcloud auth configure-docker --quiet
    - name: Create test script to execute in workloads
      run: echo -e '#!/bin/bash \n echo "Hello world from a test script!"' > workload.sh
    - name: Run a base-docker-image workload
      run: python xpk.py workload create --cluster $CLUSTER_NAME --workload $WORKLOAD_NAME  --command "echo foo"  --device=$DEVICE_TYPE --num-nodes=2 --zone=$COMPUTE_ZONE
    - name: List out the workloads on the cluster
      run: python3 xpk.py workload list --cluster $TPU_CLUSTER_NAME --zone=$COMPUTE_ZONE
    - name: Run xpk inspector with the workload created above
      run: python3 xpk.py inspector --cluster $TPU_CLUSTER_NAME --zone=$COMPUTE_ZONE  --workload $WORKLOAD_NAME
    - name: Wait for workload completion and confirm it succeeded
      run: python3 xpk.py workload list --cluster $TPU_CLUSTER_NAME --zone=$COMPUTE_ZONE --wait-for-job-completion $WORKLOAD_NAME --timeout 300
    - name: Run xpk info command
      run : python3 xpk.py info --cluster $TPU_CLUSTER_NAME --zone=$COMPUTE_ZONE
    - name: Delete the workload on the cluster
      run: python3 xpk.py workload delete --workload $WORKLOAD_NAME --cluster $TPU_CLUSTER_NAME --zone=$COMPUTE_ZONE
    - name: Delete the cluster created
      if: always()
      run: python xpk.py cluster delete --cluster $CLUSTER_NAME --zone=$COMPUTE_ZONE --force
    - name: Delete the workload files
      if: always()
      run: rm -r xpkclusters
