# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License

on:
  workflow_call:
    inputs:
      cluster-name:
        type: string
        required: true
      zone:
        type: string
        required: true
      storage-type: # gcpfilestore or gcsfuse
        required: true
        type: string
      storage-command: # detach or delete
        required: true
        default: 'detach'
        type: string
      storage-name:
        required: true
        type: string
    secrets:
      GCP_SA_KEY:
        required: true
jobs:
  storage-delete:
    name: "${{inputs.storage-type}}-${{inputs.storage-command}}"
    runs-on: [ubuntu-22.04]
    steps:
    - name: Validate storage-command
      run: |
        if [[ "${{ inputs.storage-command }}" != "detach" && "${{ inputs.storage-command }}" != "delete" ]]; then
          echo "Error: storage-command must be 'detach' or 'delete'"
          exit 1
        fi
    - uses: actions/download-artifact@v4
      with:
        name: custom-scripts
    - name: Setup environment
      uses: ./.github/actions/setup-test-env
      with:
        credentials_json: "${{ secrets.GCP_SA_KEY }}"
    - name: Check xpk installation
      run: xpk version
    - name: Detach storage volumes
      if: always()
      run: xpk storage detach ${{inputs.storage-name}} --cluster=${{inputs.cluster-name}} --zone=${{inputs.zone}}
    - name: Verify VolumeBundle deleted
      run: |
        ! kubectl get volumebundle | grep ${{inputs.storage-name}}
    - name: Delete GCP Filestore Storage instance
      if: always() && inputs.storage-command == 'delete'
      run: xpk storage delete ${{inputs.storage-name}} --cluster=${{inputs.cluster-name}} --zone=${{inputs.zone}}
    - name: Verify deletion of GCP Filestore Storage instance
      if: inputs.storage-command == 'delete'
      run: |
        ! gcloud filestore instances list | grep ${{inputs.storage-name}}