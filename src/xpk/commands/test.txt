apiVersion: jobset.x-k8s.io/v1alpha2
kind: JobSet
metadata:
  name: pw-llama2-70b-4096-rd-pw-lr-1-bx6
  labels:
    kueue.x-k8s.io/queue-name: multislice-queue  # Name of the LocalQueue
    xpk.google.com/workload: pw-llama2-70b-4096-rd-pw-lr-1-bx6
spec:
  ttlSecondsAfterFinished: 43200
  failurePolicy:
    maxRestarts: 0
  successPolicy:
    operator: "All"
    targetReplicatedJobs:
    - main
  replicatedJobs:
  - name: worker
    replicas: 1
    template:
      metadata:
        annotations:
          alpha.jobset.sigs.k8s.io/exclusive-topology: cloud.google.com/gke-nodepool
        labels:
          xpk.google.com/workload: pw-llama2-70b-4096-rd-pw-lr-1-bx6
      spec:
        backoffLimit: 16
        completions: 4
        parallelism: 4
        template:
          spec:
            terminationGracePeriodSeconds: 300
            containers:
            - args:
              - --server_port=29001
              - --resource_manager_address=pw-llama2-70b-4096-rd-pw-lr-1-bx6-rm-0-0.pw-llama2-70b-4096-rd-pw-lr-1-bx6:29001
              - --gcs_scratch_location=gs://sujinesh-us-west1/sujinesh
              image: us-docker.pkg.dev/cloud-tpu-v2-images-dev/pathways/gke/sujinesh/server:latest
              imagePullPolicy: Always
              name: pathways-worker
              ports:
              - containerPort: 29001
              - containerPort: 8471
              - containerPort: 8080
              resources:
                limits:
                  google.com/tpu: 4
              securityContext:
                privileged: true
              volumeMounts:
              - mountPath: /tmp
                name: shared-tmp
            initContainers:
            # TODO(sujinesh): We should make this optional and only part of the
            # workload if the user provides the image/enables remote python.
            - name: remote-python-sidecar
              image: TempImageLocation
              imagePullPolicy: Always
              command:
              - "bash"
              - "-c"
              - |
                python start_remote_python.py
              securityContext:
                privileged: true
              volumeMounts:
              - mountPath: /tmp
                name: shared-tmp
              ports:
                - containerPort: 50051
                env:
                - name: GRPC_SERVER_ADDRESS
                  value: "0.0.0.0:50051"
            nodeSelector:
              cloud.google.com/gke-tpu-accelerator: tpu-v5-lite-podslice
              cloud.google.com/gke-tpu-topology: 4x4
              
            priorityClassName: very-high
            hostNetwork: true
            dnsPolicy: ClusterFirstWithHostNet
            volumes:
            - hostPath:
                path: /tmp
                type: DirectoryOrCreate
              name: shared-tmp
  - name: rm
    replicas: 1
    template:
      metadata:
        labels:
          xpk.google.com/workload: pw-llama2-70b-4096-rd-pw-lr-1-bx6
      spec:
        backoffLimit: 0
        completions: 1
        parallelism: 1
        template:
          spec:
            containers:
            - args:
              - --server_port=29001
              - --gcs_scratch_location=gs://sujinesh-us-west1/sujinesh
              - --node_type=resource_manager
              - --instance_count=1
              - --instance_type=tpuv5e:4x4
              env:
              - name: REPLICATED_JOB_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.annotations['jobset.sigs.k8s.io/replicatedjob-name']
              - name: JOBSET_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.annotations['jobset.sigs.k8s.io/jobset-name']
              - name: HOST_ADDRESS
                value: $(JOBSET_NAME)-$(REPLICATED_JOB_NAME)-0-0.$(JOBSET_NAME)
              - name: TPU_SKIP_MDS_QUERY
                value: "true"
              image: us-docker.pkg.dev/cloud-tpu-v2-images-dev/pathways/gke/sujinesh/server:latest
              imagePullPolicy: Always
              name: pathways-rm
              ports:
              - containerPort: 29001
              securityContext:
                privileged: true
              volumeMounts:
              - mountPath: /tmp
                name: shared-tmp
            nodeSelector:
              cloud.google.com/gke-nodepool: cpu-rm-np
            hostNetwork: true
            dnsPolicy: ClusterFirstWithHostNet
            volumes:
            - hostPath:
                path: /tmp
                type: DirectoryOrCreate
              name: shared-tmp
  - name: proxy
    replicas: 1
    template:
      metadata:
        labels:
          xpk.google.com/workload: pw-llama2-70b-4096-rd-pw-lr-1-bx6
      spec:
        backoffLimit: 0
        completions: 1
        parallelism: 1
        template:
          spec:
            containers:
            - args:
              - --server_port=29000
              - --resource_manager_address=pw-llama2-70b-4096-rd-pw-lr-1-bx6-rm-0-0.pw-llama2-70b-4096-rd-pw-lr-1-bx6:29001
              - --gcs_scratch_location=gs://sujinesh-us-west1/sujinesh
              image: us-docker.pkg.dev/cloud-tpu-v2-images-dev/pathways/gke/sujinesh/proxy_server:latest
              imagePullPolicy: Always
              name: pathways-proxy
              ports:
              - containerPort: 29000
            hostNetwork: true
            dnsPolicy: ClusterFirstWithHostNet
            nodeSelector:
              cloud.google.com/gke-nodepool: cpu-proxy-np
  - name: main
    replicas: 1
    template:
      metadata:
        labels:
          xpk.google.com/workload: pw-llama2-70b-4096-rd-pw-lr-1-bx6
      spec:
        backoffLimit: 0
        completions: 1
        parallelism: 1
        template:
          spec:
            containers:
              - name: jax-tpu
                image: gcr.io/cloud-tpu-multipod-dev/sujinesh_latest:latest
                imagePullPolicy: Always
                env: 
                - name: XCLOUD_ENVIRONMENT
                  value: GCP
                - name: JAX_PLATFORMS
                  value: proxy
                - name: JAX_BACKEND_TARGET
                  value: grpc://pw-llama2-70b-4096-rd-pw-lr-1-bx6-proxy-0-0.pw-llama2-70b-4096-rd-pw-lr-1-bx6:29000
                - name: JOBSET_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['jobset.sigs.k8s.io/jobset-name']
                ports:
                
                
                securityContext:
                  privileged: true
                command:
                - bash
                - -c
                - |
                  echo XPK Start: $(date);
                  _sigterm() (kill -SIGTERM $! 2>/dev/null;);
                  trap _sigterm SIGTERM;
                  
                  (export TPU_STDERR_LOG_LEVEL=0 && export TPU_MIN_LOG_LEVEL=0 && export TF_CPP_MIN_LOG_LEVEL=0 && export TPU_VMODULE=real_program_continuator=1 &&    export ENABLE_PATHWAYS_PERSISTENCE=1 && export JAX_PLATFORMS=proxy && export TPU_PREMAPPED_BUFFER_SIZE=4294967296 && echo 4294967296 && export ENABLE_PJRT_COMPATIBILITY=true && python3 MaxText/train.py MaxText/configs/base.yml per_device_batch_size=4 ici_fsdp_parallelism=-1 remat_policy=full max_target_length=4096 attention=flash gcs_metrics=True use_iota_embed=True reuse_example_batch=0 profiler=xplane dataset_path=gs://max-datasets-rogue dataset_type=tfds tokenizer_path=assets/tokenizer.llama2 sa_block_q=1024 sa_block_q_dkv=2048 sa_block_q_dq=2048 steps=1000000 enable_checkpointing=True async_checkpointing=True checkpoint_period=100 checkpoint_storage_use_ocdbt=False checkpoint_storage_use_zarr3=False metrics_file=metrics.txt goodput_upload_interval_seconds=30 enable_pathways_goodput=True enable_checkpoint_cloud_logger=True enable_single_controller=True  model_name=llama2-70b base_output_directory=gs://sujinesh-us-west1/sujinesh use_vertex_tensorboard=false vertex_tensorboard_project= vertex_tensorboard_region= run_name=pw-llama2-70b-4096-rd-pw-lr-1-bx6) & PID=$!;
                  while kill -0 $PID 2>/dev/null;
                      do sleep 5;
                  done;
                  wait $PID;
                  EXIT_CODE=$?;
                  
                  echo XPK End: $(date);
                  echo EXIT_CODE=$EXIT_CODE;
                  
                  
                  if [ "$EXIT_CODE" = 143 ]; then
                    exit $EXIT_CODE
                  fi
                  exit $EXIT_CODE
                resources:
                  limits:
                    cpu: "24"
                    memory: 100G

                volumeMounts:
                - mountPath: /tmp
                  name: shared-tmp

            nodeSelector:
              cloud.google.com/gke-nodepool: cpu-user-np
            restartPolicy: OnFailure
            volumes:
            - hostPath:
                path: /tmp
                type: DirectoryOrCreate
              name: shared-tmp